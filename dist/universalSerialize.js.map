{"version":3,"sources":["webpack://universal-serialize/webpack/universalModuleDefinition","webpack://universal-serialize/webpack/bootstrap","webpack://universal-serialize/./src/constants.js","webpack://universal-serialize/./src/common.js","webpack://universal-serialize/./src/serializers/array.js","webpack://universal-serialize/./src/serializers/boolean.js","webpack://universal-serialize/./src/serializers/date.js","webpack://universal-serialize/./src/serializers/error.js","webpack://universal-serialize/./src/serializers/function.js","webpack://universal-serialize/./src/serializers/number.js","webpack://universal-serialize/./src/serializers/object.js","webpack://universal-serialize/./src/serializers/promise.js","webpack://universal-serialize/./src/serializers/regex.js","webpack://universal-serialize/./src/serializers/string.js","webpack://universal-serialize/./src/serializers/null.js","webpack://universal-serialize/./src/serialize.js","webpack://universal-serialize/./src/deserialize.js","webpack://universal-serialize/./src/index.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","TYPE","FUNCTION","ERROR","PROMISE","REGEX","DATE","ARRAY","OBJECT","STRING","NUMBER","BOOLEAN","NULL","UNDEFINED","isSerializedType","item","__type__","determineType","val","Array","isArray","Error","then","toString","serializeArray","deserializeArray","serializeBoolean","deserializeBoolean","serializeDate","__date__","toJSON","deserializeDate","_ref","Date","serializeError","__message__","message","__stack__","stack","__code__","code","deserializeError","error","serializeFunction","deserializeFunction","serializeNumber","deserializeNumber","serializeObject","deserializeObject","serializePromise","deserializePromise","serializeRegex","__source__","source","deserializeRegex","RegExp","serializeString","deserializeString","serializeNull","deserializeNull","SERIALIZER","_SERIALIZER","defaultSerializers","serialize","obj","serializers","result","JSON","stringify","type","serializer","serializeType","__val__","DESERIALIZER","_DESERIALIZER","defaultDeserializers","deserialize","str","deserializers","parse","__webpack_exports__"],"mappings":"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","file":"universalSerialize.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"universal-serialize\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"universal-serialize\"] = factory();\n\telse\n\t\troot[\"universal-serialize\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/* @flow */\n\nexport const TYPE = {\n    FUNCTION:  ('function' : 'function'),\n    ERROR:     ('error' : 'error'),\n    PROMISE:   ('promise' : 'promise'),\n    REGEX:     ('regex' : 'regex'),\n    DATE:      ('date' : 'date'),\n    ARRAY:     ('array' : 'array'),\n    OBJECT:    ('object' : 'object'),\n    STRING:    ('string' : 'string'),\n    NUMBER:    ('number' : 'number'),\n    BOOLEAN:   ('boolean' : 'boolean'),\n    NULL:      ('null' : 'null'),\n    UNDEFINED: ('undefined' : 'undefined')\n};\n","/* @flow */\n\nimport { TYPE } from './constants';\n\nexport function isSerializedType(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null && typeof item.__type__ === 'string');\n}\n\nexport function determineType(val : mixed) : $Values<typeof TYPE> | void {\n    if (typeof val === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    if (val === null) {\n        return TYPE.NULL;\n    }\n\n    if (Array.isArray(val)) {\n        return TYPE.ARRAY;\n    }\n\n    if (typeof val === 'function') {\n        return TYPE.FUNCTION;\n    }\n\n    if (typeof val === 'object') {\n\n        if (val instanceof Error) {\n            return TYPE.ERROR;\n        }\n\n        if (typeof val.then === 'function') {\n            return TYPE.PROMISE;\n        }\n\n        if (Object.prototype.toString.call(val) === '[object RegExp]') {\n            return TYPE.REGEX;\n        }\n\n        if (Object.prototype.toString.call(val) === '[object Date]') {\n            return TYPE.DATE;\n        }\n\n        return TYPE.OBJECT;\n    }\n\n    if (typeof val === 'string') {\n        return TYPE.STRING;\n    }\n\n    if (typeof val === 'number') {\n        return TYPE.NUMBER;\n    }\n\n    if (typeof val === 'boolean') {\n        return TYPE.BOOLEAN;\n    }\n}\n","/* @flow */\n\nexport type SerializedArray<T : mixed = mixed> = $ReadOnlyArray<T>;\n\nexport function serializeArray<T : mixed>(val : $ReadOnlyArray<T>) : SerializedArray<T> {\n    return val;\n}\n\nexport function deserializeArray<T : mixed>(val : SerializedArray<T>) : $ReadOnlyArray<T> {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedBoolean = boolean;\n\nexport function serializeBoolean(val : boolean) : SerializedBoolean {\n    return val;\n}\n\nexport function deserializeBoolean(val : SerializedBoolean) : boolean {\n    return val;\n}\n","/* @flow */\n\nimport { TYPE } from '../constants';\n\nexport type SerializedDate = {|\n    __type__ : typeof TYPE.DATE,\n    __date__ : string\n|};\n\nexport function serializeDate(val : Date) : SerializedDate {\n    return {\n        __type__: TYPE.DATE,\n        __date__: val.toJSON()\n    };\n}\n\nexport function deserializeDate({ __date__ } : SerializedDate) : Date {\n    return new Date(__date__);\n}\n","/* @flow */\n\nimport { TYPE } from '../constants';\n\nexport type SerializedError = {|\n    __type__ : typeof TYPE.ERROR,\n    __message__ : string,\n    __stack__ : string,\n    __code__ : string | number | void\n|};\n\nexport function serializeError(val : Error) : SerializedError {\n    return {\n        __type__:    TYPE.ERROR,\n        __message__: val.message,\n        __stack__:   val.stack,\n        // $FlowFixMe\n        __code__:    val.code\n    };\n}\n\nexport function deserializeError({ __message__, __code__, __stack__ } : SerializedError) : Error {\n    const error = new Error(__message__);\n    // $FlowFixMe\n    error.code = __code__;\n    error.stack = `${ __stack__ }\\n\\n${ error.stack }`;\n    return error;\n}\n","/* @flow */\n\nexport type SerializedFunction = void;\n\nexport function serializeFunction() : SerializedFunction {\n    // pass\n}\n\nexport function deserializeFunction() {\n    throw new Error(`Function serialization is not implemented; nothing to deserialize`);\n}\n","/* @flow */\n\nexport type SerializedNumber = number;\n\nexport function serializeNumber(val : number) : SerializedNumber {\n    return val;\n}\n\nexport function deserializeNumber(val : SerializedNumber) : number {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedObject = Object;\n\nexport function serializeObject(val : Object) : SerializedObject {\n    return val;\n}\n\nexport function deserializeObject(val : SerializedObject) : Object {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedPromise = void;\n\nexport function serializePromise() : SerializedPromise {\n    // pass\n}\n\nexport function deserializePromise() {\n    throw new Error(`Promise serialization is not implemented; nothing to deserialize`);\n}\n","/* @flow */\n\nimport { TYPE } from '../constants';\n\nexport type SerializedRegex = {|\n    __type__ : typeof TYPE.REGEX,\n    __source__ : string\n|};\n\nexport function serializeRegex(val : RegExp) : SerializedRegex {\n    return {\n        __type__:   TYPE.REGEX,\n        __source__: val.source\n    };\n}\n\nexport function deserializeRegex({ __source__ } : SerializedRegex) : RegExp {\n    // eslint-disable-next-line security/detect-non-literal-regexp\n    return new RegExp(__source__);\n}\n","/* @flow */\n\nexport type SerializedString = string;\n\nexport function serializeString(val : string) : SerializedString {\n    return val;\n}\n\nexport function deserializeString(val : SerializedString) : string {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedNull = null;\n\nexport function serializeNull(val : null) : SerializedNull {\n    return val;\n}\n\nexport function deserializeNull(val : SerializedNull) : null {\n    return val;\n}\n","/* @flow */\n\nimport { TYPE } from './constants';\nimport type { Thenable, CustomSerializedType, NativeSerializedType } from './types';\nimport { determineType, isSerializedType } from './common';\nimport {\n    serializeFunction,\n    serializeError,\n    serializePromise,\n    serializeRegex,\n    serializeDate,\n    serializeArray,\n    serializeObject,\n    serializeString,\n    serializeNumber,\n    serializeBoolean,\n    serializeNull\n} from './serializers';\n\ntype Serializer<I : mixed> = (I, string) => NativeSerializedType | CustomSerializedType | mixed | void;\n\ntype Serializers = {|\n    function? : Serializer<Function>,\n    error? : Serializer<Error>,\n    promise? : Serializer<Thenable>,\n    regex? : Serializer<RegExp>,\n    date? : Serializer<Date>,\n    array? : Serializer<$ReadOnlyArray<mixed>>,\n    object? : Serializer<Object>,\n    string? : Serializer<string>,\n    number? : Serializer<number>,\n    boolean? : Serializer<boolean>,\n    null? : Serializer<null>\n|};\n\nconst SERIALIZER : Serializers = {\n    [ TYPE.FUNCTION ]:  serializeFunction,\n    [ TYPE.ERROR ]:     serializeError,\n    [ TYPE.PROMISE ]:   serializePromise,\n    [ TYPE.REGEX ]:     serializeRegex,\n    [ TYPE.DATE ]:      serializeDate,\n    [ TYPE.ARRAY ]:     serializeArray,\n    [ TYPE.OBJECT ]:    serializeObject,\n    [ TYPE.STRING ]:    serializeString,\n    [ TYPE.NUMBER ]:    serializeNumber,\n    [ TYPE.BOOLEAN ]:   serializeBoolean,\n    [ TYPE.NULL ]:      serializeNull\n};\n\n// $FlowFixMe\nconst defaultSerializers : Serializers = {};\n\nexport function serialize<T : mixed>(obj : T, serializers : Serializers = defaultSerializers) : string {\n\n    function replacer(key) : ?mixed {\n        const val = this[key];\n\n        if (isSerializedType(this)) {\n            return val;\n        }\n        \n        const type = determineType(val);\n\n        if (!type) {\n            return val;\n        }\n\n        // $FlowFixMe\n        const serializer = serializers[type] || SERIALIZER[type];\n\n        if (!serializer) {\n            return val;\n        }\n\n        return serializer(val, key);\n    }\n\n    const result = JSON.stringify(obj, replacer);\n\n    if (typeof result === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    return result;\n}\n\nexport function serializeType<T : string, V : mixed>(type : T, val : V) : CustomSerializedType {\n    return {\n        __type__: type,\n        __val__:  val\n    };\n}\n","/* @flow */\n\nimport type { Thenable, NativeSerializedType, CustomSerializedType } from './types';\nimport { TYPE } from './constants';\nimport { determineType, isSerializedType } from './common';\nimport {\n    deserializeFunction,\n    deserializeError,\n    deserializePromise,\n    deserializeRegex,\n    deserializeDate,\n    deserializeArray,\n    deserializeObject,\n    deserializeString,\n    deserializeNumber,\n    deserializeBoolean,\n    deserializeNull\n} from './serializers';\n\ntype Deserializer<O : mixed> = (NativeSerializedType | CustomSerializedType | mixed, string) => O;\n\ntype Deserializers = {\n    function? : Deserializer<Function>,\n    error? : Deserializer<Error>,\n    promise? : Deserializer<Thenable>,\n    regex? : Deserializer<RegExp>,\n    date? : Deserializer<Date>,\n    array? : Deserializer<$ReadOnlyArray<mixed>>,\n    object? : Deserializer<Object>,\n    string? : Deserializer<string>,\n    number? : Deserializer<number>,\n    boolean? : Deserializer<boolean>,\n    null? : Deserializer<null>,\n    [string] : Deserializer<mixed>\n};\n\n// $FlowFixMe\nconst DESERIALIZER : Deserializers = {\n    [ TYPE.FUNCTION ]:  deserializeFunction,\n    [ TYPE.ERROR ]:     deserializeError,\n    [ TYPE.PROMISE ]:   deserializePromise,\n    [ TYPE.REGEX ]:     deserializeRegex,\n    [ TYPE.DATE ]:      deserializeDate,\n    [ TYPE.ARRAY ]:     deserializeArray,\n    [ TYPE.OBJECT ]:    deserializeObject,\n    [ TYPE.STRING ]:    deserializeString,\n    [ TYPE.NUMBER ]:    deserializeNumber,\n    [ TYPE.BOOLEAN ]:   deserializeBoolean,\n    [ TYPE.NULL ]:      deserializeNull\n};\n\n// $FlowFixMe\nconst defaultDeserializers : Deserializers = {};\n\nexport function deserialize<T : mixed | null | void>(str : string, deserializers : Deserializers = defaultDeserializers) : T {\n    if (str === TYPE.UNDEFINED) {\n        // $FlowFixMe\n        return;\n    }\n\n    function replacer(key, val) : ?mixed {\n        if (isSerializedType(this)) {\n            return val;\n        }\n\n        const type = isSerializedType(val)\n            ? val.__type__\n            : determineType(val);\n\n        if (!type) {\n            return val;\n        }\n\n        // $FlowFixMe\n        if (deserializers[type]) {\n            // $FlowFixMe\n            return deserializers[type](val.__val__, key);\n        } else if (DESERIALIZER[type]) {\n            // $FlowFixMe\n            return DESERIALIZER[type](val, key);\n        } else {\n            return val;\n        }\n    }\n\n    return JSON.parse(str, replacer);\n}\n","/* @flow */\n\nexport * from './serialize';\nexport * from './deserialize';\nexport * from './serializers';\nexport * from './constants';\nexport * from './types';\n"],"sourceRoot":""}